{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","console","table","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59065f4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\"\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n    // const opts = {\r\n    //     height: \"390\",\r\n    //     width: \"100%\",\r\n    //     playerVars: {\r\n\r\n    //         autoplay: 1\r\n    //     },\r\n    // };\r\n\r\n    console.table(movies);\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img key={movie.id} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {/* <YouTube videoId={trailerUrl} opts={opts} /> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"7eca0534429619704a79e6d7d6f8e080\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            // Math.floor(Math.random() * request.data.results.length -1)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // console.log(movie)\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\r\n        \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n        )`,\r\n                backgroundPosition: \"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n            </div>\r\n\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Banner","import React, { useState, useEffect } from 'react';\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    const [show, handleshow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleshow(true)\r\n            } else handleshow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img\r\n                className=\"nav_logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Nav","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" isLargeRow fetchUrl={requests.fetchNetflixOriginals} />\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}